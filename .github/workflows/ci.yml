name: Build

permissions:
  checks: write
  pull-requests: write
  
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

env:
  GIST_ID: e434f7b17274a026c153482b64e5cf91

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore local tools
        run: dotnet tool restore

      - name: Build solution
        run: dotnet build -c Debug

      - name: Run tests
        run: dotnet test -c Debug --no-build --no-restore --logger="junit;LogFileName=${{ github.workspace }}/dotnet-test-result.xml" --collect:"XPlat Code Coverage" --results-directory= ./coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
          
      - name: Generate coverage report
        run: dotnet reportgenerator -reports:coverage/*/coverage.cobertura.xml -targetdir:./coverage -reporttypes:MarkdownSummary
        
      - name: Create badges
        uses: gaelgirodon/ci-badges-action@v1
        with:
          gist-id: ${{ env.GIST_ID }}
          token: ${{ secrets.GIST_TOKEN }}
        
      - name: Create check with coverage report
        uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Code coverage
          conclusion: ${{ job.status }}
          output: '{"summary":"Code coverage"}'
          output_text_description_file: coverage/Summary.md

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: ${{ github.workspace }}/dotnet-test-result.xml


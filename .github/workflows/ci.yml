name: Build

permissions:
  checks: write
  pull-requests: write
  contents: write
  
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:

env:
  GIST_ID: e434f7b17274a026c153482b64e5cf91

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get next version
        uses: reecetech/version-increment@2024.10.1
        id: version
        with:
          scheme: semver
          increment: patch

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore local tools
        run: dotnet tool restore

      - name: Build solution
        run: dotnet build -c Release /p::${{ steps.version.outputs.version }}"

      - name: Run tests
        run: dotnet test -c Release --no-build --no-restore --logger="junit;LogFileName=${{ github.workspace }}/dotnet-test-result.xml" --collect:"XPlat Code Coverage" --results-directory= ./coverage
          
      - name: Generate coverage report
        run: dotnet reportgenerator -reports:coverage/*/coverage.cobertura.xml -targetdir:./coverage -reporttypes:MarkdownSummaryGithub,Html

      - name: Publish full coverage report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with: 
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage
        
      - name: Create badges
        uses: gaelgirodon/ci-badges-action@v1
        with:
          gist-id: ${{ env.GIST_ID }}
          token: ${{ secrets.GIST_TOKEN }}
        
      - name: Create check with coverage report
        uses: LouisBrunner/checks-action@v2.0.0
        if: always()
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Code coverage
          conclusion: ${{ job.status }}
          output: '{"summary":"Code coverage"}'
          output_text_description_file: coverage/SummaryGithub.md

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: ${{ github.workspace }}/dotnet-test-result.xml

  #    - name: Publish to NuGet.org
  #      if: startsWith(github.ref, 'refs/heads/main')
  #      run: dotnet nuget push **\*.nupkg --source 'https://api.nuget.org/v3/index.json' --api-key ${{secrets.NUGET_API_KEY}}
        
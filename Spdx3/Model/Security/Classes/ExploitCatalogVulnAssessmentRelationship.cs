using System.Diagnostics.CodeAnalysis;
using System.Text.Json.Serialization;
using Spdx3.Model.Core.Classes;
using Spdx3.Model.Core.Enums;
using Spdx3.Model.Security.Enums;
using Spdx3.Serialization;
using Spdx3.Utility;

namespace Spdx3.Model.Security.Classes;

public class ExploitCatalogVulnAssessmentRelationship : VulnAssessmentRelationship
{
    
    [JsonPropertyName("security_catalogType")]
    [JsonConverter(typeof(SpdxModelConverterFactory))]
    public required ExploitCatalogType? CatalogType { get; set; }
        
    [JsonPropertyName("security_exploited")]
    [JsonConverter(typeof(SpdxModelConverterFactory))]
    public required bool? Exploited { get; set; }
        
    [JsonPropertyName("security_locator")]
    [JsonConverter(typeof(SpdxModelConverterFactory))]
    public required Uri? Locator { get; set; }
    
    // protected internal no-parm constructor required for deserialization
#pragma warning disable CS8618, CS9264
    internal ExploitCatalogVulnAssessmentRelationship()
    {
    }
#pragma warning restore CS8618, CS9264

    [SetsRequiredMembers]
    public ExploitCatalogVulnAssessmentRelationship(Catalog catalog, CreationInfo creationInfo, Element from, 
        List<Element> to, ExploitCatalogType catalogType, bool exploited, Uri locator) 
        : base(catalog, creationInfo, RelationshipType.hasAssessmentFor, from, to)
    {
        this.CatalogType = catalogType;
        this.Exploited = exploited;
        this.Locator = locator;
    }
}